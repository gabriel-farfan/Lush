import * as React from 'react';
import PropTypes from 'prop-types';
import { IMaskInput } from 'react-imask';
import NumberFormat from 'react-number-format';
import Box from '@mui/material/Box';
import Input from '@mui/material/Input';
import InputLabel from '@mui/material/InputLabel';
import TextField from '@mui/material/TextField';
import FormControl from '@mui/material/FormControl';

const NumberFormatCustom = React.forwardRef(function NumberFormatCustom(props, ref) {
    const { onChange, ...other } = props;
    return (
        <NumberFormat
            {...other}
            getInputRef={ref}
            onValueChange={(values) => {
                onChange({
                    target: {
                        name: props.name,
                        value: values.value,
                    },
                });
            }}
            thousandSeparator
            isNumericString
            prefix="$"
        />
    );
});

NumberFormatCustom.propTypes = {
    name: PropTypes.string.isRequired,
    onChange: PropTypes.func.isRequired,
};

export default function FormattedInputs() {
    const [price, setPrice] = React.useState({
        minimum: 0,
        maximum: Infinity
    });
    const handleChange = event => setPrice({ ...price, [event.target.name]: +event.target.value });
    return (
        <>
            <TextField
                name="minimum"
                label="Min. price"
                value={price.minimum}
                onChange={handleChange}
                InputProps={{
                    inputComponent: NumberFormatCustom,
                }}
                variant="standard"
            />
            <TextField
                name="maximum"
                label="Max. price"
                value={price.maximum}
                onChange={handleChange}
                InputProps={{
                    inputComponent: NumberFormatCustom,
                }}
                variant="standard"
            />
        </>
    );
}
